AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  lambda-authorizer

  Sample SAM Template for lambda-authorizer

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Resources:
  MyApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: dev
      Auth:
        Authorizers:
          MyLambdaTokenAuthorizer:
            FunctionArn: !GetAtt MyAuthFunction.Arn

  PublicFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: public/
      Handler: app.lambdaHandler
      Runtime: nodejs10.x
      Events:
        Get:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /public
            Method: get
            RestApiId: !Ref MyApi

  SecureFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: secure/
      Handler: app.lambdaHandler
      Runtime: nodejs10.x
      Events:
        Get:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /secure
            Method: get
            RestApiId: !Ref MyApi
            Auth:
              Authorizer: MyLambdaTokenAuthorizer

  MyAuthFunction:
    Type: "AWS::Serverless::Function"
    Properties:
      CodeUri: ./authorizer
      Handler: app.authorizer
      Runtime: nodejs10.x

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  ApiUrl:
    Description: "API Gateway endpoint URL for Prod stage for lambda functions"
    # Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
    Value: !Ref MyApi
  PublicFunction:
    Description: "Public Lambda Function ARN"
    Value: !GetAtt PublicFunction.Arn
  SecureFunction:
    Description: "Secure Lambda Function ARN"
    Value: !GetAtt SecureFunction.Arn
